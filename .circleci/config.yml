# This config is equivalent to both the '.circleci/extended/orb-free.yml' and the base '.circleci/config.yml'
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
#orbs:
  #node: circleci/node@4.7

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
#workflows:
  #sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    #jobs:
      #- node/build:
          # This is the node version to use for the `cimg/node` tag
          # Relevant tags can be found on the CircleCI Developer Hub
          # https://circleci.com/developer/images/image/cimg/node
          #version: '16.10'
          # If you are using yarn, change the line below from "npm" to "yarn"
          # pkg-manager: npm
jobs:
  build:
    docker:
    # Use the same Docker base as the project
       - image: cimg/node:17.5.0
    working_directory: ~/repo
    steps:
      # Checkout code from git
      - checkout  
      # Download and cache dependencies                                         
      - restore_cache:                                    
          keys: [build]
      - run:
          name: build 
          command: |
                    cd app
                    npm install
                    pwd
                    ls -la
 Test:
    docker:
    # Use the same Docker base as the project
       - image: cimg/node:17.5.0
    working_directory: ~/repo
    steps:
      # Checkout code from git
      - checkout  
      # Download and cache dependencies                                         
      - restore_cache:                                    
          keys: [build]
      - run:
          name: test 
          command: |
                    cd app
                    npm install
                    npm run test
                    pwd
                    ls -la
  Scan:
    docker:
    # Use the same Docker base as the project
       - image: cimg/node:17.5.0
    working_directory: ~/repo
    steps:
      # Checkout code from git
      - checkout  
      # Download and cache dependencies                                         
      - restore_cache:                                    
          keys: [test]
      - run:
          name: scan 
          command: |
                    cd app
                    npm install
                    npm audit fix --audit-level=critical --force
                    pwd
                    ls -la                                        
                # Below would be the Workflows specific config

workflows:
  default:
    jobs:         
      - build    
      - test
      - scan